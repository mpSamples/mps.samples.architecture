package mps.sample.architecture.interfaces.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RequestReplyMessage extends Message {
  public static final String concept = "mps.sample.architecture.interfaces.structure.RequestReplyMessage";
  public static final String REQUEST_PARAMETERS = "requestParameters";
  public static final String REPLY_PARAMETERS = "replyParameters";

  public RequestReplyMessage(SNode node) {
    super(node);
  }

  public MessageParameters getRequestParameters() {
    return (MessageParameters)this.getChild(MessageParameters.class, RequestReplyMessage.REQUEST_PARAMETERS);
  }

  public void setRequestParameters(MessageParameters node) {
    super.setChild(RequestReplyMessage.REQUEST_PARAMETERS, node);
  }

  public MessageParameters getReplyParameters() {
    return (MessageParameters)this.getChild(MessageParameters.class, RequestReplyMessage.REPLY_PARAMETERS);
  }

  public void setReplyParameters(MessageParameters node) {
    super.setChild(RequestReplyMessage.REPLY_PARAMETERS, node);
  }

  public static RequestReplyMessage newInstance(SModel sm, boolean init) {
    return (RequestReplyMessage)SModelUtil_new.instantiateConceptDeclaration("mps.sample.architecture.interfaces.structure.RequestReplyMessage", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RequestReplyMessage newInstance(SModel sm) {
    return RequestReplyMessage.newInstance(sm, false);
  }
}
