package mps.sample.architecture.replicated_datastructures.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DatastructureReference extends BaseConcept {
  public static final String concept = "mps.sample.architecture.replicated_datastructures.structure.DatastructureReference";
  public static final String DATASTRUCTURE = "datastructure";

  public DatastructureReference(SNode node) {
    super(node);
  }

  public ReplicatedDatastructure getDatastructure() {
    return (ReplicatedDatastructure)this.getReferent(ReplicatedDatastructure.class, DatastructureReference.DATASTRUCTURE);
  }

  public void setDatastructure(ReplicatedDatastructure node) {
    super.setReferent(DatastructureReference.DATASTRUCTURE, node);
  }

  public static DatastructureReference newInstance(SModel sm, boolean init) {
    return (DatastructureReference)SModelUtil_new.instantiateConceptDeclaration("mps.sample.architecture.replicated_datastructures.structure.DatastructureReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DatastructureReference newInstance(SModel sm) {
    return DatastructureReference.newInstance(sm, false);
  }
}
