package mps.samples.architecture.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DataStructureReference extends BaseConcept implements INamedConcept {
  public static final String concept = "mps.samples.architecture.structure.DataStructureReference";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String DATA_STRUCTURE = "dataStructure";

  public DataStructureReference(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(DataStructureReference.NAME);
  }

  public void setName(String value) {
    this.setProperty(DataStructureReference.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(DataStructureReference.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(DataStructureReference.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(DataStructureReference.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(DataStructureReference.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(DataStructureReference.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(DataStructureReference.VIRTUAL_PACKAGE, value);
  }

  public DataStructure getDataStructure() {
    return (DataStructure)this.getReferent(DataStructure.class, DataStructureReference.DATA_STRUCTURE);
  }

  public void setDataStructure(DataStructure node) {
    super.setReferent(DataStructureReference.DATA_STRUCTURE, node);
  }

  public static DataStructureReference newInstance(SModel sm, boolean init) {
    return (DataStructureReference)SModelUtil_new.instantiateConceptDeclaration("mps.samples.architecture.structure.DataStructureReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DataStructureReference newInstance(SModel sm) {
    return DataStructureReference.newInstance(sm, false);
  }
}
