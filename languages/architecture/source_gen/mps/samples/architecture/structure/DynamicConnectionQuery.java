package mps.samples.architecture.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DynamicConnectionQuery extends BaseConcept {
  public static final String concept = "mps.samples.architecture.structure.DynamicConnectionQuery";
  public static final String STATUS = "status";
  public static final String TYPE = "type";

  public DynamicConnectionQuery(SNode node) {
    super(node);
  }

  public StatusEnum getStatus() {
    String value = super.getProperty(DynamicConnectionQuery.STATUS);
    return StatusEnum.parseValue(value);
  }

  public void setStatus(StatusEnum value) {
    super.setProperty(DynamicConnectionQuery.STATUS, value.getValueAsString());
  }

  public InterfaceReference getType() {
    return (InterfaceReference)this.getChild(InterfaceReference.class, DynamicConnectionQuery.TYPE);
  }

  public void setType(InterfaceReference node) {
    super.setChild(DynamicConnectionQuery.TYPE, node);
  }

  public static DynamicConnectionQuery newInstance(SModel sm, boolean init) {
    return (DynamicConnectionQuery)SModelUtil_new.instantiateConceptDeclaration("mps.samples.architecture.structure.DynamicConnectionQuery", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DynamicConnectionQuery newInstance(SModel sm) {
    return DynamicConnectionQuery.newInstance(sm, false);
  }
}
