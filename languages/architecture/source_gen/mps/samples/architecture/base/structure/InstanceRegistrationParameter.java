package mps.samples.architecture.base.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InstanceRegistrationParameter extends BaseConcept implements INamedConcept {
  public static final String concept = "mps.samples.architecture.base.structure.InstanceRegistrationParameter";
  public static final String VALUE = "value";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";

  public InstanceRegistrationParameter(SNode node) {
    super(node);
  }

  public String getValue() {
    return this.getProperty(InstanceRegistrationParameter.VALUE);
  }

  public void setValue(String value) {
    this.setProperty(InstanceRegistrationParameter.VALUE, value);
  }

  public String getName() {
    return this.getProperty(InstanceRegistrationParameter.NAME);
  }

  public void setName(String value) {
    this.setProperty(InstanceRegistrationParameter.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(InstanceRegistrationParameter.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(InstanceRegistrationParameter.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(InstanceRegistrationParameter.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(InstanceRegistrationParameter.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(InstanceRegistrationParameter.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(InstanceRegistrationParameter.VIRTUAL_PACKAGE, value);
  }

  public static InstanceRegistrationParameter newInstance(SModel sm, boolean init) {
    return (InstanceRegistrationParameter)SModelUtil_new.instantiateConceptDeclaration("mps.samples.architecture.base.structure.InstanceRegistrationParameter", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InstanceRegistrationParameter newInstance(SModel sm) {
    return InstanceRegistrationParameter.newInstance(sm, false);
  }
}
