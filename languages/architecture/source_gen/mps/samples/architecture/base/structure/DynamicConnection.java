package mps.samples.architecture.base.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DynamicConnection extends BaseConcept {
  public static final String concept = "mps.samples.architecture.base.structure.DynamicConnection";
  public static final String INTERVAL = "interval";
  public static final String LEFT_SIDE = "leftSide";
  public static final String QUERY = "query";

  public DynamicConnection(SNode node) {
    super(node);
  }

  public int getInterval() {
    return this.getIntegerProperty(DynamicConnection.INTERVAL);
  }

  public void setInterval(int value) {
    this.setIntegerProperty(DynamicConnection.INTERVAL, value);
  }

  public RequiredInterfaceConnectionEndpoint getLeftSide() {
    return (RequiredInterfaceConnectionEndpoint)this.getChild(RequiredInterfaceConnectionEndpoint.class, DynamicConnection.LEFT_SIDE);
  }

  public void setLeftSide(RequiredInterfaceConnectionEndpoint node) {
    super.setChild(DynamicConnection.LEFT_SIDE, node);
  }

  public DynamicConnectionQuery getQuery() {
    return (DynamicConnectionQuery)this.getChild(DynamicConnectionQuery.class, DynamicConnection.QUERY);
  }

  public void setQuery(DynamicConnectionQuery node) {
    super.setChild(DynamicConnection.QUERY, node);
  }

  public static DynamicConnection newInstance(SModel sm, boolean init) {
    return (DynamicConnection)SModelUtil_new.instantiateConceptDeclaration("mps.samples.architecture.base.structure.DynamicConnection", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DynamicConnection newInstance(SModel sm) {
    return DynamicConnection.newInstance(sm, false);
  }
}
